const config = require('../config');
const { cmd, commands } = require('../command');
const os = require("os");
const { runtime } = require('../lib/functions');
const axios = require('axios');

cmd({
    pattern: "menu2",
    desc: "menu the bot",
    category: "menu",
    react: "üìÉ",
    filename: __filename
}, 
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
    try {
        let dec = `*„Ää‚ò´ ùêà ùêí ùêá ùêÄ ùêç  ùêå ùêÉ ‚ò´„Äã*
        
‚îÉ‚òÖ‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
‚îÉ‚òÖ‚îÇ Owner : *ùô∏ùöÇùô∑ùô∞ùôΩ ùôºùô≥*
‚îÉ‚òÖ‚îÇ Baileys : *Multi Device*
‚îÉ‚òÖ‚îÇ Type : *NodeJs*
‚îÉ‚òÖ‚îÇ Mode : * *
‚îÉ‚òÖ‚îÇ Prifix : *[${config.PREFIX}]*
‚îÉ‚òÖ‚îÇ Version : *1.0.0 B·¥á·¥õ·¥Ä*
‚îÉ‚òÖ‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îà‚ä∑
‚ï≠‚îÅ‚îÅ„Äî *Menu List* „Äï‚îÅ‚îÅ‚îà‚ä∑
‚îÉ‚óà‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑‡πè
‚îÉ‚óà‚îÉ‚Ä¢ aimenu
‚îÉ‚óà‚îÉ‚Ä¢ anmiemenu
‚îÉ‚óà‚îÉ‚Ä¢ convertmenu
‚îÉ‚óà‚îÉ‚Ä¢ funmenu
‚îÉ‚óà‚îÉ‚Ä¢ dlmenu
‚îÉ‚óà‚îÉ‚Ä¢ listcmd
‚îÉ‚óà‚îÉ‚Ä¢ mainmenu
‚îÉ‚óà‚îÉ‚Ä¢ groupmenu
‚îÉ‚óà‚îÉ‚Ä¢ allmenu
‚îÉ‚óà‚îÉ‚Ä¢ ownermenu
‚îÉ‚óà‚îÉ‚Ä¢ othermenu
‚îÉ‚óà‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
        
> *·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è …™s ú·¥Ä…¥-·¥ç·¥Ö*`;

        await conn.sendMessage(
            from,
            {
                image: { url: `https://i.ibb.co/Jj2rvrt8/6979.jpg` },
                caption: dec,
                contextInfo: {
                    mentionedJid: [m.sender],
                    forwardingScore: 999,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterJid: '120363391262285507@newsletter',
                        newsletterName: 'ishanmd',
                        serverMessageId: 143
                    }
                }
            },
            { quoted: mek }
        );

    } catch (e) {
        console.log(e);
        reply(`${e}`);
    }
});


// dlmenu

cmd({
    pattern: "dlmenu",
    desc: "menu the bot",
    category: "menu",
    react: "‚§µÔ∏è",
    filename: __filename
}, 
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
    try {
        let dec = `‚ï≠‚îÅ‚îÅ„Äî *Download Menu* „Äï‚îÅ‚îÅ‚îà‚ä∑
        
‚îÉ‚óà‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑‡πè
‚îÉ‚óà‚îÉ‚Ä¢ fb
‚îÉ‚óà‚îÉ‚Ä¢ mediafire
‚îÉ‚óà‚îÉ‚Ä¢ tiktok
‚îÉ‚óà‚îÉ‚Ä¢ twitter
‚îÉ‚óà‚îÉ‚Ä¢ img
‚îÉ‚óà‚îÉ‚Ä¢ video
‚îÉ‚óà‚îÉ‚Ä¢ ytmp3
‚îÉ‚óà‚îÉ‚Ä¢ ytmp4
‚îÉ‚óà‚îÉ‚Ä¢ song
‚îÉ‚óà‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
> *·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è …™s ú·¥Ä…¥-·¥ç·¥Ö*`;

        await conn.sendMessage(
            from,
            {
                image: { url: `https://i.ibb.co/Jj2rvrt8/6979.jpg` },
                caption: dec,
                contextInfo: {
                    mentionedJid: [m.sender],
                    forwardingScore: 999,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterJid: '120363391262285507@newsletter',
                        newsletterName: 'ishanmd',
                        serverMessageId: 143
                    }
                }
            },
            { quoted: mek }
        );

    } catch (e) {
        console.log(e);
        reply(`${e}`);
    }
});

// group menu

cmd({
    pattern: "groupmenu",
    desc: "menu the bot",
    category: "menu",
    react: "‚§µÔ∏è",
    filename: __filename
}, 
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
    try
       {
        let dec = `‚ï≠‚îÅ‚îÅ„Äî *Group Menu* „Äï‚îÅ‚îÅ‚îà‚ä∑
           
‚îÉ‚óà‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑‡πè
‚îÉ‚óà‚îÉ‚Ä¢ add
‚îÉ‚óà‚îÉ‚Ä¢ kick
‚îÉ‚óà‚îÉ‚Ä¢ promote
‚îÉ‚óà‚îÉ‚Ä¢ mute
‚îÉ‚óà‚îÉ‚Ä¢ unmute
‚îÉ‚óà‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
           
> *·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è …™s ú·¥Ä…¥-·¥ç·¥Ö*`;

        await conn.sendMessage(
            from,
            {
                image: { url: `https://i.ibb.co/Jj2rvrt8/6979.jpg` },
                caption: dec,
                contextInfo: {
                    mentionedJid: [m.sender],
                    forwardingScore: 999,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterJid: '120363391262285507@newsletter',
                        newsletterName: 'ishanmd',
                        serverMessageId: 143
                    }
                }
            },
            { quoted: mek }
        );

    } catch (e) {
        console.log(e);
        reply(`${e}`);
    }
});

// fun menu

cmd({
    pattern: "funmenu",
    desc: "menu the bot",
    category: "menu",
    react: "üòé",
    filename: __filename
}, 
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
    try {

        let dec = `‚ï≠‚îÅ‚îÅ„Äî *Fun Menu* „Äï‚îÅ‚îÅ‚îà
        
‚îÉ‚óà‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑‡πè
‚îÉ‚óà‚îÉ‚Ä¢ hack
‚îÉ‚óà‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑

> *·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è …™s ú·¥Ä…¥-·¥ç·¥Ö*`;

        await conn.sendMessage(
            from,
            {
                image: { url: `https://i.ibb.co/Jj2rvrt8/6979.jpg` },
                caption: dec,
                contextInfo: {
                    mentionedJid: [m.sender],
                    forwardingScore: 999,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterJid: '120363391262285507@newsletter',
                        newsletterName: 'ishanmd',
                        serverMessageId: 143
                    }
                }
            },
            { quoted: mek }
        );

    } catch (e) {
        console.log(e);
        reply(`${e}`);
    }
});

// other menu

cmd({
    pattern: "othermenu",
    desc: "menu the bot",
    category: "menu",
    react: "ü§ñ",
    filename: __filename
}, 
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
    try {
        let dec = `‚ï≠‚îÅ‚îÅ„Äî *Other Menu* „Äï‚îÅ‚îÅ‚îà‚ä∑
        
‚îÉ‚óà‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑‡πè
‚îÉ‚óà‚îÉ‚Ä¢ 
‚îÉ‚óà‚îÉ‚Ä¢ 
‚îÉ‚óà‚îÉ‚Ä¢
‚îÉ‚óà‚îÉ‚Ä¢ 
‚îÉ‚óà‚îÉ‚Ä¢ 
‚îÉ‚óà‚îÉ‚Ä¢ 
‚îÉ‚óà‚îÉ‚Ä¢
‚îÉ‚óà‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
> *·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è …™s ú·¥Ä…¥-·¥ç·¥Ö*`;

        await conn.sendMessage(
            from,
            {
                image: { url: `https://i.ibb.co/Jj2rvrt8/6979.jpg` },
                caption: dec,
                contextInfo: {
                    mentionedJid: [m.sender],
                    forwardingScore: 999,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterJid: '120363391262285507@newsletter',
                        newsletterName: 'ishanmd',
                        serverMessageId: 143
                    }
                }
            },
            { quoted: mek }
        );

    } catch (e) {
        console.log(e);
        reply(`${e}`);
    }
});

// main menu

cmd({
    pattern: "mainmenu",
    desc: "menu the bot",
    category: "menu",
    react: "üóø",
    filename: __filename
}, 
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
    try {
        let dec = `‚ï≠‚îÅ‚îÅ„Äî *Main Menu* „Äï‚îÅ‚îÅ‚îà‚ä∑
        
‚îÉ‚óà‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑‡πè
‚îÉ‚óà‚îÉ‚Ä¢ ping
‚îÉ‚óà‚îÉ‚Ä¢ ping2
‚îÉ‚óà‚îÉ‚Ä¢ alive
‚îÉ‚óà‚îÉ‚Ä¢ menu
‚îÉ‚óà‚îÉ‚Ä¢ menu2
‚îÉ‚óà‚îÉ‚Ä¢ restart
‚îÉ‚óà‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑

> *·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è …™s ú·¥Ä…¥-·¥ç·¥Ö*`;

        await conn.sendMessage(
            from,
            {
                image: { url: `https://i.ibb.co/Jj2rvrt8/6979.jpg` },
                caption: dec,
                contextInfo: {
                    mentionedJid: [m.sender],
                    forwardingScore: 999,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterJid: '120363391262285507@newsletter',
                        newsletterName: 'ishanmd',
                        serverMessageId: 143
                    }
                }
            },
            { quoted: mek }
        );

    } catch (e) {
        console.log(e);
        reply(`${e}`);
    }
});

// owner menu

cmd({
    pattern: "ownermenu",
    desc: "menu the bot",
    category: "menu",
    react: "üî∞",
    filename: __filename
}, 
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
    try {
        let dec = `‚ï≠‚îÅ‚îÅ„Äî *Owner Menu* „Äï‚îÅ‚îÅ‚îà‚ä∑
        
‚îÉ‚óà‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑‡πè
‚îÉ‚óà‚îÉ‚Ä¢ menu
‚îÉ‚óà‚îÉ‚Ä¢ menu2
‚îÉ‚óà‚îÉ‚Ä¢ listcmd
‚îÉ‚óà‚îÉ‚Ä¢ allmenu
‚îÉ‚óà‚îÉ‚Ä¢ block
‚îÉ‚óà‚îÉ‚Ä¢ restart
‚îÉ‚óà‚îÉ‚Ä¢ shutdown
‚îÉ‚óà‚îÉ‚Ä¢ alive
‚îÉ‚óà‚îÉ‚Ä¢ ping
‚îÉ‚óà‚îÉ‚Ä¢ jid
‚îÉ‚óà‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑

> *·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è …™s ú·¥Ä…¥-·¥ç·¥Ö*`;

        await conn.sendMessage(
            from,
            {
                image: { url: `https://i.ibb.co/Jj2rvrt8/6979.jpg` },
                caption: dec,
                contextInfo: {
                    mentionedJid: [m.sender],
                    forwardingScore: 999,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterJid: '120363391262285507@newsletter',
                        newsletterName: 'ishanmd',
                        serverMessageId: 143
                    }
                }
            },
            { quoted: mek }
        );

    } catch (e) {
        console.log(e);
        reply(`${e}`);
    }
});

// convert menu

cmd({
    pattern: "convertmenu",
    desc: "menu the bot",
    category: "menu",
    react: "ü•Ä",
    filename: __filename
}, 
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
    try {
        let dec = `‚ï≠‚îÅ‚îÅ„Äî *Convert Menu* „Äï‚îÅ‚îÅ‚îà‚ä∑
        
‚îÉ‚óà‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑‡πè
‚îÉ‚óà‚îÉ‚Ä¢ 
‚îÉ‚óà‚îÉ‚Ä¢ 
‚îÉ‚óà‚îÉ‚Ä¢ 
‚îÉ‚óà‚îÉ‚Ä¢ 
‚îÉ‚óà‚îÉ‚Ä¢
‚îÉ‚óà‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑

> *·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è …™s ú·¥Ä…¥-·¥ç·¥Ö*`;

        await conn.sendMessage(
            from,
            {
                image: { url: `https://i.ibb.co/Jj2rvrt8/6979.jpg` },
                caption: dec,
                contextInfo: {
                    mentionedJid: [m.sender],
                    forwardingScore: 999,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterJid: '120363391262285507@newsletter',
                        newsletterName: 'ishanmd',
                        serverMessageId: 143
                    }
                }
            },
            { quoted: mek }
        );

    } catch (e) {
        console.log(e);
        reply(`${e}`);
    }
});


// anmie menu 

cmd({
    pattern: "animemenu",
    desc: "menu the bot",
    category: "menu",
    react: "üßö",
    filename: __filename
}, 
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
    try {
          let dec = `‚ï≠‚îÅ‚îÅ„Äî *Anime Menu* „Äï‚îÅ‚îÅ‚îà‚ä∑
        
‚îÉ‚óà‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑‡πè
‚îÉ‚óà‚îÉ‚Ä¢ 
‚îÉ‚óà‚îÉ‚Ä¢ 
‚îÉ‚óà‚îÉ‚Ä¢ 
‚îÉ‚óà‚îÉ‚Ä¢ 
‚îÉ‚óà‚îÉ‚Ä¢ 
‚îÉ‚óà‚îÉ‚Ä¢ 
‚îÉ‚óà‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑

> *·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è …™s ú·¥Ä…¥-·¥ç·¥Ö*`;

        await conn.sendMessage(
            from,
            {
                image: { url: `https://i.ibb.co/Jj2rvrt8/6979.jpg` },
                caption: dec,
                contextInfo: {
                    mentionedJid: [m.sender],
                    forwardingScore: 999,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterJid: '120363391262285507@newsletter',
                        newsletterName: 'ishanmd',
                        serverMessageId: 143
                    }
                }
            },
            { quoted: mek }
        );

    } catch (e) {
        console.log(e);
        reply(`${e}`);
    }
});


// ai menu 

cmd({
    pattern: "aimenu",
    desc: "menu the bot",
    category: "menu",
    react: "ü§ñ",
    filename: __filename
}, 
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
    try {
        let dec = `‚ï≠‚îÅ‚îÅ„Äî *Ai Menu* „Äï‚îÅ‚îÅ‚îà‚ä∑
        
‚îÉ‚óà‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑‡πè
‚îÉ‚óà‚îÉ‚Ä¢ ai
‚îÉ‚óà‚îÉ‚Ä¢ 
‚îÉ‚óà‚îÉ‚Ä¢ 
‚îÉ‚óà‚îÉ‚Ä¢ 
‚îÉ‚óà‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑

> *·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è …™s ú·¥Ä…¥-·¥ç·¥Ö*`;

        await conn.sendMessage(
            from,
            {
                image: { url: `https://i.ibb.co/Jj2rvrt8/6979.jpg` },
                caption: dec,
                contextInfo: {
                    mentionedJid: [m.sender],
                    forwardingScore: 999,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterJid: '120363391262285507@newsletter',
                        newsletterName: 'ishanmd',
                        serverMessageId: 143
                    }
                }
            },
            { quoted: mek }
        );

    } catch (e) {
        console.log(e);
        reply(`${e}`);
    }
});
